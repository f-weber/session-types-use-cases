module POP3.POP3_S;

type <java> "java.lang.String" from "rt.jar" as String;
type <java> "java.lang.Integer" from "rt.jar" as Int;
type <java> "java.lang.Integer" from "rt.jar" as TwoInt;
type <java> "java.lang.String" from "rt.jar" as Void;
type <java> "java.lang.String" from "rt.jar" as IntString;

local protocol ProtocolName(self S,role C) {
	OKN(String) to C;
	rec authentication_username {
		choice at C {
			USER(String) from C;
			choice at S {
				OK(String) to C;
				rec authentication_password {
					choice at C {
						PASS(String) from C;
						choice at S {
							OK(String) to C;
							rec transaction {
								choice at C {
									STAT(Void) from C;
									OKN(TwoInt) to C;
									continue transaction;
								} or {
									LIST(Void) from C;
									choice at S {
										OK(String) to C;
										rec summary_choice_list {
											choice at S {
												DOT(Void) to C;
												continue transaction;
											} or {
												SUM(TwoInt) to C;
												continue summary_choice_list;
											}
										}
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									LIST_n(Int) from C;
									choice at S {
										OK(TwoInt) to C;
										continue transaction;
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									RETR_n(Int) from C;
									choice at S {
										OK(String) to C;
										rec summary_choice_retrieve {
											choice at S {
												DOT(Void) to C;
												continue transaction;
											} or {
												SUM(String) to C;
												continue summary_choice_retrieve;
											}
										}
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									DELE_n(Int) from C;
									choice at S {
										OK(String) to C;
										continue transaction;
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									RSET(Void) from C;
									OKN(String) to C;
									continue transaction;
								} or {
									TOP_n(TwoInt) from C;
									choice at S {
										OK(String) to C;
										rec summary_choice_top {
											choice at S {
												DOT(Void) to C;
												continue transaction;
											} or {
												SUM(String) to C;
												continue summary_choice_top;
											}
										}
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									NOOP(Void) from C;
									OKN(Void) to C;
									continue transaction;
								} or {
									QUIT(Void) from C;
									OKN(String) to C;
								} or {
									UIDL(Void) from C;
									choice at S {
										OK(String) to C;
										rec summary_choice_uidl {
											choice at S {
												DOT(Void) to C;
												continue transaction;
											} or {
												SUM(IntString) to C;
												continue summary_choice_uidl;
											}
										}
									} or {
										ERR(String) to C;
										continue transaction;
									}
								} or {
									UIDL_n(Int) from C;
									choice at S {
										OK(IntString) to C;
										continue transaction;
									} or {
										ERR(String) to C;
										continue transaction;
									}
								}
							}
						} or {
							ERR(String) to C;
							continue authentication_password;
						}
					} or {
						QUIT(Void) from C;
						OKN(String) to C;
					}
				}
			} or {
				ERR(String) to C;
				continue authentication_username;
			}
		} or {
			QUIT(Void) from C;
			OKN(String) to C;
		}
	}
}
